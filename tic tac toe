import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
public class TicTacToeGUI extends Application {
    private char currentPlayer = 'X';
    private char[][] board = new char[3][3];
    private GridPane gridPane = new GridPane();
    public static void main(String[] args) {
        launch(args);
    }
    @Override
    public void start(Stage primaryStage) {
        initializeBoard();
        drawBoard(primaryStage);
        primaryStage.setTitle("Chethana's Tic-Tac-Toe");
        primaryStage.setScene(new Scene(gridPane, 300, 300));
        primaryStage.show();
    }
    private void initializeBoard() {
        for (int row = 0; row < 3; row++) {
            for (int col = 0; col < 3; col++) {
                board[row][col] = ' ';
            }
        }
    }
    private void drawBoard(Stage stage) {
        for (int row = 0; row < 3; row++) {
            for (int col = 0; col < 3; col++) {
                Button cell = new Button(" ");
                cell.setMinSize(100, 100);
                cell.setStyle("-fx-font-size: 36");
                int finalRow = row;
                int finalCol = col;
                cell.setOnAction(e -> handleMove(finalRow, finalCol, cell, stage));
                gridPane.add(cell, col, row);
            }
        }
    }
    private void handleMove(int row, int col, Button cell, Stage stage) {
        if (board[row][col] == ' ' && !isGameOver()) {
            board[row][col] = currentPlayer;
            cell.setText(String.valueOf(currentPlayer));
            cell.setDisable(true);
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
            if (isGameOver()) {
                String message = "It's a draw!";
                if (checkWin('X')) {
                    message = "Player X wins!";
                } else if (checkWin('O')) {
                    message = "Player O wins!";
                }
                displayGameOver(message, stage);
            }
        }
    }
    private boolean isGameOver() {
        return isBoardFull() || checkWin('X') || checkWin('O');
    }
    private boolean isBoardFull() {
        for (int row = 0; row < 3; row++) {
            for (int col = 0; col < 3; col++) {
                if (board[row][col] == ' ') {
                    return false;
                }
            }
        }
        return true;
    }
    private boolean checkWin(char player) {
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
                return true;
            }
            if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
                return true;
            }
        }
        if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
            return true;
        }
        return board[0][2] == player && board[1][1] == player && board[2][0] == player;
    }
    private void displayGameOver(String message, Stage stage) {
        Stage gameOverStage = new Stage();
        gameOverStage.initOwner(stage);
        gameOverStage.setTitle("Game Over");
        Button closeButton = new Button("Close");
        closeButton.setOnAction(e -> gameOverStage.close());
        gameOverStage.setScene(new Scene(closeButton, 200, 100));
        gameOverStage.show();
    }
}
